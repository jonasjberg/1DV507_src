~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1DV507 -- Programming and Data Structures, VT2017
Assignment 1: Inheritance, Recursion and Java 1.8
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Created by Jonas SjÃ¶berg (js224eh) on 2017-01-26.

Exercise 2
==========


SPACE
================================================================================

* The ferry transports passengers and vehicles: cars, busses, lorries, bicycles

* The ferry has space for 200 passengers and 40 cars.

    * A lorry needs as much space as two busses or 8 cars.

      Which gives:  1*lorry = 2*bus
                    1*lorry = 8*car

      Solving for bus:  2*bus = 8*car  -->  bus = 4*car
                                            ~~~~~~~~~~~

      Solving for car:  2*bus = 8*car  -->  bus = 4*car  -->  car = bus/4
                                                              ~~~~~~~~~~~

* A car needs as much space as 5 bicycles.

      Which gives:  1*car = 5*bicycle


Use smallest size unit as the "unit length" for all sizes?

    1*sizeUnit = 1*bicycle

    That is;                The ferry has 200 sizeUnits of space.
                              ((40 cars) * (1*car per bicycle))

    Which translates to:         | Vehicle | Space needed |
                                 |---------|--------------|
                                 | Bicycle | 1 sizeUnits  |
                                 | Car     | 5 sizeUnits  |
                                 | Bus     | 20 sizeUnits |
                                 | Lorry   | 40 sizeUnits |


    .. HOWEVER; countVehicleSpace() uses 1*car as normalized unit.
    .. So, dividing everything by 5 gives the final numbers:

                                 | Vehicle | Space needed  |
                                 |---------|---------------|
                                 | Bicycle | 1/5 sizeUnits |
                                 | Car     | 1 sizeUnits   |
                                 | Bus     | 4 sizeUnits   |
                                 | Lorry   | 8 sizeUnits   |


FEES
================================================================================

* There are different fees for different vehicles
* An extra fee might be added for passengers.

Use the following fees:

    1. Passenger without vehicle, 20 kr.
    2. Bicycle 40 kr                  (passenger included)
    3. Car 100 kr + 15 kr/passenger   (maximum 4 passengers)
    4. Bus 200 kr + 10 kr/passenger   (maximum 20 passengers)
    5. Lorry 300 kr + 15 kr/passenger (maximum 2 passengers)



* Each type of vehicle (car, bus, lorry, bicycle) will inherit from the class
  Vehicle.

* A vehicle cannot leave the ferry until the ferry has been disembarked and the
  same vehicle cannot embark twice.


The functionality of the ferry is given by the interface Ferry:

public interface Ferry  {
   int countPassengers();             // Number of passengers on board
   int countVehicleSpace();           // Used vehicle space. One car is 1.
   int countMoney();                  // Earned money
   Iterator<Vehicle> iterator();      // Vehicle iterator
   void embark(Vehicle v);            // Embark vehicle, warning if not enough space
   void embark(Passenger p);          // Embark passenger, warning if not enough room
   void disembark();                  // Clear (empty) ferry. The money earned remains,
                                      // i.e., is not reset to zero
   boolean hasSpaceFor(Vehicle v);    // true if we can embark vehicle v
   boolean hasRoomFor(Passenger p);   // true if we can embark passenger p
   String toString();                 // Nice looking ferry status print out

}


* The ferry iterator should iterate over all vehicles embarked (not the
  passengers).


Also write a program FerryMain.java, embarking a number of vehicles and
passengers, showing the functionality of the methods.

